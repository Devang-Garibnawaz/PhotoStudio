@model IEnumerable<PhotoStudio.Models.tblPhotographer>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script>
    function ConfirmationDialog(ID) {
        if (confirm("Are you sure to delete?"))
            fnDeleteRecord(ID);
        else
            return false;
    }

    function fnDeleteRecord(ID) {
        $.ajax({
            async: true,
            type: 'POST',
            dataType: 'JSON',
            contentType: 'application/json; charset=utf-8',
            data: "{'id':'" + ID + "'}",
            url: '/Photographer/DeletePhotographer',
            success: function (response) {
                if (response.success === true) {
                    toastr.success(
                        response.message,
                        '',
                        {
                            timeOut: 1000,
                            fadeOut: 1000,
                            onHidden: function () {
                                window.location.reload();
                            }
                        }
                    );
                }
                else {
                    toastr.info(response.message, '', { timeOut: 3000 });
                }
            },
            error: function () {
                toastr.error('Error occur', 'Error occur while deleting record.', { timeOut: 3000 });
            }

        });
    }

    function fnInsertCustomer() {
        var formData = new FormData();
        var PhotographerName = $("#txtPhotographerName");
        var Email = $("#txtEmail");
        var Salary = $("#txtSalary");
        var Address = $("#txtAddress");
        var PhoneNumber = $("#txtPhoneNumber");
        var chkIsActive = $('#chkIsActive').is(':checked');
        var chkIsFreelancer = $('#chkIsFreelancer').is(':checked');

        if (__glb_fnIsNullOrEmpty(PhotographerName.val())) {
            toastr.warning('Input Error', 'Please enter photographerName name', { timeOut: 3000, fadeOut: 1000 });
            PhotographerName.focus();
            return;
        }

        if (__glb_fnIsNullOrEmpty(Email.val())) {
            toastr.warning('Input Error', 'Please enter email', { timeOut: 3000, fadeOut: 1000 });
            Email.focus();
            return;
        }

        if (!__glb_validateEmail(Email.val())) {
            toastr.warning('Input Error', 'Please enter valid email', { timeOut: 3000, fadeOut: 1000 });
            Email.focus();
            return;
        }

        if (__glb_fnIsNullOrEmpty(Salary.val())) {
            toastr.warning('Input Error', 'Please enter salary', { timeOut: 3000, fadeOut: 1000 });
            Salary.focus();
            return;
        }

        if (__glb_fnIsNullOrEmpty(Address.val())) {
            toastr.warning('Input Error', 'Please enter address', { timeOut: 3000, fadeOut: 1000 });
            Address.focus();
            return;
        }

        if (__glb_fnIsNullOrEmpty(PhoneNumber.val())) {
            toastr.warning('Input Error', 'Please enter phone number', { timeOut: 3000, fadeOut: 1000 });
            PhoneNumber.focus();
            return;
        }

        if (!__glb_validatePhoneNumber(PhoneNumber.val())) {
            toastr.warning('Input Error', 'Please enter valid phone number', { timeOut: 3000, fadeOut: 1000 });
            PhoneNumber.focus();
            return;
        }

        formData.append("PhotographerName", PhotographerName.val());
        formData.append("Salary", Salary.val());
        formData.append("Email", Email.val());
        formData.append("PhoneNumber", PhoneNumber.val());
        formData.append("Address", Address.val());
        formData.append("IsActive", chkIsActive);
        formData.append("IsFreelancer", chkIsFreelancer);
        var file = document.getElementById("inputProfile").files[0];
        formData.append("imageFile", file);

        if (document.getElementById("inputProfile").files.length <= 0) {
            toastr.warning('Input Error', 'Please select profile pic', { timeOut: 3000, fadeOut: 1000 });
            return;
        }

        var response = __glb_fnIUDOperation(formData, '/Photographer/InsertPhotographer/');
        if (response.success == true) {
            toastr.success(
                response.message,
                'Record is inserted',
                {
                    timeOut: 1000,
                    fadeOut: 1000,
                    onHidden: function () {
                        window.location.reload();
                    }
                }
            );
        }
        else if (response.Formatwarning == true) {
            toastr.warning(
                response.message,
                'Picture format error',
                {
                    timeOut: 3000,
                    fadeOut: 1000,
                    onHidden: function () {
                        return;
                    }
                }
            );
        }
        else {
            toastr.error('Error occur!', response.message, { timeOut: 1000, fadeOut: 1000 });
        }

    }

    function fnActivateDeactivatePhotographer(PGID, ADAFlag) {
        var formData = new FormData();
        formData.append("id", PGID);
        formData.append("flag", ADAFlag);

        var result = __glb_fnIUDOperation(formData, '/Photographer/ActivateDeactivatePhotographer')

        if (result.Act == true) {
            toastr.success(
                result.message,
                'Activated!',
                {
                    timeOut: 1000,
                    fadeOut: 1000,
                    onHidden: function () {
                        window.location.reload();
                    }
                }
            );
        }
        else if (result.DeAct == true) {
            toastr.success(
                result.message,
                'De-Activated!',
                {
                    timeOut: 1000,
                    fadeOut: 1000,
                    onHidden: function () {
                        window.location.reload();
                    }
                }
            );
        }
        else {
            toastr.error(result.message, 'Error!', { timeOut: 3000, fadeOut: 1000 });
        }
    }
</script>

<div id="add-photographer" class="modal fade in" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="H1">Add User</h4>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">X</button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <div class="col-md-12 m-b-20">
                        Photographer Name: <input type="text" id="txtPhotographerName" class="form-control" required placeholder="Enter Photographer Name:" /><br /><br />
                        Email: <input type="email" id="txtEmail" class="form-control" required placeholder="Enter Email:" /><br /><br />
                        Phone Number: <input type="number" id="txtPhoneNumber" class="form-control" required placeholder="Enter phone number:" /><br /><br />
                        Address: <textarea id="txtAddress" required class="form-control" placeholder="Enter Address"></textarea><br/><br/>
                        Salary: <input type="text" id="txtSalary" class="form-control" required placeholder="Enter Salary:" /><br /><br />
                        Is Active: &nbsp;&nbsp;&nbsp;<input type="checkbox" checked class="js-switch" data-size="small" id="chkIsActive" /><br /><br />
                        Is Freelancer: &nbsp;&nbsp;&nbsp;<input type="checkbox" checked class="js-switch" data-size="small" id="chkIsFreelancer" /><br /><br />
                        Profile Pic: <input type="file" id="inputProfile" class="form-control" /><br /><br />
                        <div class="modal-footer">
                            <input type="submit" value="Add" class="btn btn-success" onclick="fnInsertCustomer()" />
                            <input type="button" class="btn btn-danger" data-dismiss="modal" aria-hidden="true" value="Cancel" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row page-titles">
    <div class="col-md-5 align-self-center">
        <h4 class="text-themecolor">Photographer List</h4>
    </div>
    <div class="col-md-7 align-self-center text-right">
        <div class="d-flex justify-content-end align-items-center">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Home</a></li>
                <li class="breadcrumb-item active">Photographer List</li>
            </ol>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header bg-info">
                <h4 class="m-b-0 text-white">Photographer list:</h4>
            </div>

            <div class="card-body">

                <div class="table-responsive m-t-40">
                    <button class="btn waves-effect waves-light btn-outline-success" data-toggle="modal" data-target="#add-photographer">
                        + Add Photographer
                    </button>
                    <table id="example23" class="display table table-hover table-striped table-bordered" width="100%">
                        <thead>
                            <tr>
                                <th>Profile Pic</th>
                                <th>Name</th>
                                <th><font color="green">Number /</font><br/><font color="red">Email</font></th>
                                <th>Address</th>
                                <th>Is Active</th>
                                <th><font color="green">Created Date /</font><br/><font color="red">UpdatedDate</font></th>
                                <th>Edit</th>
                                <th>Delete</th>
                            </tr>
                        </thead>

                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td align="center"> <a target="_blank" href="~/PhotographerProfilePic/@item.ProfilePic"><img src="~/PhotographerProfilePic/@item.ProfilePic" height="50px" width="50px" /></a></td>
                                    <td align="left">@item.PhotographerName</td>
                                    <td align="left"><font color="green">@item.PhoneNumber</font> <br /> <font color="red">@item.Email</font></td>
                                    <td align="left">@item.Address</td>
                                    <td align="center">
                                        @if (item.IsActive == true)
                                        {

                                            <button class="btn btn-success btn-rounded" title="Click here to Deactivate Customer" onclick="javascript:fnActivateDeactivatePhotographer(@item.PhotographerID,0)">
                                                <i class="fa fa-check"></i> Active
                                            </button>
                                        }
                                        else
                                        {
                                            <button class="btn btn-danger btn-rounded" title="Click to activate customer" onclick="javascript:fnActivateDeactivatePhotographer(@item.PhotographerID,1)">
                                                <i class="fa fa-times"></i> Inactive
                                            </button>
                                        }
                                    </td>
                                    <td align='left'><font color="green">@item.CreatedDate/</font><br/><font color="red">@item.UpdatedDate</td>
                                    <td align="center">

                                        @Html.ActionLink("Update", "Edit", new { id = item.PhotographerID }, htmlAttributes: new { @class = "btn btn-warning waves-effect waves-light" })
                                    </td>
                                    <td align="center">
                                        <button type="submit" class="btn btn-danger waves-effect waves-light" onclick="return ConfirmationDialog(@item.PhotographerID)">
                                            <span class="btn-label"><i class="fa fa-trash"></i></span>
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>


<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js" type="text/javascript"></script>
<script src="~/adminassets/node_modules/datatables/datatables.min.js"></script>
<script src="https://cdn.datatables.net/buttons/1.5.1/js/dataTables.buttons.min.js"></script>
<script src="https://cdn.datatables.net/buttons/1.5.1/js/buttons.flash.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.32/pdfmake.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.32/vfs_fonts.js"></script>
<script src="https://cdn.datatables.net/buttons/1.5.1/js/buttons.html5.min.js"></script>
<script src="https://cdn.datatables.net/buttons/1.5.1/js/buttons.print.min.js"></script>

<script>
    $(function () {
        $('#example23').DataTable();
        $(function () {
            var table = $('#example23').DataTable({
                "columnDefs": [{
                    "visible": false,
                    "targets": 2
                }],
                "order": [
                    [2, 'asc']
                ],
                "displayLength": 25,
                "drawCallback": function (settings) {
                    var api = this.api();
                    var rows = api.rows({
                        page: 'current'
                    }).nodes();
                    var last = null;
                    api.column(2, {
                        page: 'current'
                    }).data().each(function (group, i) {
                        if (last !== group) {
                            $(rows).eq(i).before('<tr class="group"><td colspan="5">' + group + '</td></tr>');
                            last = group;
                        }
                    });
                }
            });
            // Order by the grouping
            $('#example tbody').on('click', 'tr.group', function () {
                var currentOrder = table.order()[0];
                if (currentOrder[0] === 2 && currentOrder[1] === 'asc') {
                    table.order([2, 'desc']).draw();
                } else {
                    table.order([2, 'asc']).draw();
                }
            });
        });
    });
    $('#example23').DataTable({
        dom: 'Bfrtip',
        buttons: [
            'excel', 'pdf', 'print'
        ]
    });
    $('.buttons-print, .buttons-pdf, .buttons-excel').addClass('btn btn-primary mr-1');
</script>
